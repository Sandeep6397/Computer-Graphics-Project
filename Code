#include <GL/glut.h>
#include <math.h>
#include <stdio.h>
#include <iostream>

#define PI 3.1416
GLfloat spin = 0.0;
int state=1,flag=1;
float tx =  0.0,bx=0.0,by=0.0,isbaby=0,dolnay=0,glUp=1,angle=0,step=0,stepx=0,stepy=0,cloudleftx=0,cloudmiddlex=0,cloudrightx=0,cloudrightupx=0,countdolna=0;
float ty =  5.0;

float cloudLeftMove=0,crowleftx=0;
float xx=10,yy=13;

void drawstring(float x, float y, float z, std::string s)
{
    glRasterPos3f(x, y, z);
    for (int i = 0; i < s.length(); i++)
        glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24, s[i]);
}

void introinit()
{
// glMatrixMode(GL_PROJECTION);

    glClearColor(0.0f, 0.0f, 1.0f, 0.0f);
    gluOrtho2D(0.0, 1000.0, 0.0, 650.0);
// glMatrixMode(GL_MODELVIEW);
}



void introDisplay()
{
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(1.0, 1.0, 0.0);
    drawstring(0, 0, 0.0, "*********************************************************************");
    drawstring(264, 650, 0.0, "**    MANGALORE INSTITUTE OF TECHNOLOGY AND ENGINEERING    **");
    drawstring(264, 630, 0.0, "*********************************************************************");
    glColor3f(1.0, 1.0, 0.0);
    drawstring(340, 600, 0.0, "COMPUTER GRAPHICS MINI PROJECT ON");
    glColor3f(1.0, 1.0, 0.0);
    drawstring(415, 565, 0.0, "\" CHILDREN'S PARK \"");
    glColor3f(1.0, 1.0, 0.0);
    drawstring(415, 563, 0.0,"___________________");
    glColor3f(1.0, 1.0, 0.0);
    drawstring(480, 520, 0.0, "BY");
    glColor3f(1.0, 1.0, 0.0);
    drawstring(260, 470, 0.0, "SANDEEP");
    drawstring(260, 430, 0.0, "SHIVARAJ");
    glColor3f(1.0, 1.0, 0.0);
    drawstring(590, 470, 0.0, "4MT18CS078");
    drawstring(590, 430, 0.0, "4MT18CS089");
   
    glColor3f(1.0, 1.0, 0.0);
    drawstring(385, 380, 0.0, "UNDER THE GUIDANCE OF");
    drawstring(385, 378, 0.0, "_______________________");
    glColor3f(1.0, 1.0, 0.0);
    drawstring(230, 320, 0.0, "MS. SUNITHA N V");
    drawstring(200, 280, 0.0, "ASST. PROFESSOR DEPT.OF CSE");
    glColor3f(1.0, 1.0, 0.0);
    drawstring(625, 320, 0.0, "MS. AISHWARYA M BHAT");
    drawstring(600, 280, 0.0, "ASST. PROFESSOR DEPT.OF CSE");
   
    glColor3f(1.0, 0.0, 0.0);
    drawstring(410, 180, 0.0, "PRESS  ''Q''  TO ENTER");
    glutSwapBuffers();
}

void infoDisplay()
{
// glScalef(2,2,0);

glClear(GL_COLOR_BUFFER_BIT);
glColor3f(1.0, 1.0, 0.0);
    drawstring(-1500, 3000, 0.0, "INSTRUCTIONS");
    glColor3f(0.0, 1.0, 1.0);
    drawstring(-1500, 2800, 0.0, "______________");
    glColor3f(1,0,0);
    glBegin(GL_QUADS);
    glVertex2d(-6500.0,2300.0);
    glVertex2d(7500.0,2300.0);
    glVertex2d(7500.0,-1100);
    glVertex2d(-6500.0,-1100);
    glEnd();
   
    glColor3f(0.0, 1.0, 1.0);
    drawstring(-6000, 1800, 0.0, "1. CHILD MOVEMENT ");
    drawstring(-2000, 1800, 0.0, " -----------------> ");
    drawstring(2000, 1800, 0.0, " RIGHT, LEFT, TOP, BOTTOM ");
   
    drawstring(-6000, 1300, 0.0, "2. BENCH ");
    drawstring(-2000, 1300, 0.0, " -----------------> ");
    drawstring(2000, 1300, 0.0, " ''r'' AND ''s'' ");
   
    drawstring(-6000, 800, 0.0, "3. SWING MOVEMENT ");
    drawstring(-2000, 800, 0.0, " -----------------> ");
    drawstring(2000, 800, 0.0, " ''u'' AND ''d'' ");
   
    drawstring(-6000, 300, 0.0, "4. GLIDER MOVEMENT ");
    drawstring(-2000, 300, 0.0, " -----------------> ");
    drawstring(2000, 300, 0.0, " ''g'', ''h'', ''l'' AND ''j'' ");
   
    drawstring(-6000, -200, 0.0, "5.SLIDER MOVEMENT ");
    drawstring(-2000, -200, 0.0, " -----------------> ");
    drawstring(2000, -200, 0.0, " ''o'', ''o'', ''o'' AND ''o'' ");
   
    drawstring(-6000, -700, 0.0, "6. GAINT WHEEL ");
    drawstring(-2000, -700, 0.0, " -----------------> ");
    drawstring(2000, -700, 0.0, " ''w'' ");
   
    glColor3f(1.0, 1.0, 0.0);
    drawstring(-2000, -1600, 0.0, " PRESS  ''Z''  TO ENTER");
   
    glutSwapBuffers();
}


void baby();

void circle(float radius_x, float radius_y)
{
    int i = 0;
    float angle1 = 0.0;

    glBegin(GL_POLYGON);

    for(i = 0; i < 100; i++)
    {
        angle1 = 2 * PI * i / 100;
        glVertex3f (cos(angle1) * radius_x, sin(angle1) * radius_y, 0);
    }

    glEnd();
}


void sky()
{
    glPushMatrix();
    glColor3f(0.53f,0.807f,0.98f);
    glTranslated(0,10,1),
    glBegin(GL_QUADS);
    glVertex2d(-150.0,0.0);
    glVertex2d(150.0,0.0);
    glVertex2d(150.0,-8);
    glVertex2d(-150.0,-8);
    glEnd();
    glPopMatrix();

}

void hillSide()
{
    glPushMatrix();
    glScaled(1,0.6,0);
    glPushMatrix(); //hill left
    glTranslated(-9.5,0.0,1);
    glColor3f(0.42, 0.56, 0.137);
    glTranslatef(0,4.5,0);
    circle(12,5);
    glPopMatrix();

    glPushMatrix();
    glTranslated(8.5,0.0,1);
    glColor3f(0.46, 0.6, 0.14);//hill right
    glTranslatef(0,4,0);
    circle(15,7);
    glPopMatrix();

    glPushMatrix();
    glTranslated(-4.5,0.0,1);
    glColor3f(0.0,0.79,0); //hill center
    glTranslatef(0,5,0);
    circle(6,3);
    glPopMatrix();

    glPushMatrix();
    glTranslated(-13.4,5,1);
    glBegin(GL_TRIANGLES);
    glVertex2f(1.0,0.0);
    glVertex2f(4.0,1.75);
    glVertex2f(5.0,0.0);
    glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslated(4.2,5,1);
    glRotated(180,0,1,0);
    glBegin(GL_TRIANGLES);
    glVertex2f(1.0,0.0);
    glVertex2f(4.0,1.78);
    glVertex2f(5.0,0.0);
    glEnd();
    glPopMatrix();
   
    glPopMatrix();
}

void hillTree()
{
    glPushMatrix();//Big tree-1
    glTranslated(-13,5.7,0);
    glScaled(0.5,0.2,0);
    glPushMatrix();
    glTranslated(-1,-10,1);
    glColor3f(0.55,0.27,0.0745);
    glBegin(GL_QUADS);
    glVertex2d(0.0,0.0);
    glVertex2d(0.0,10.0);//steam
    glVertex2d(1.0,10.0);
    glVertex2d(1.0,0.0);
    glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslated(-0.5,0,0);
    glScaled(0.4,1,1);
    glPushMatrix();
    glColor3f(0.0,0.39,0); //large circle
    glTranslatef(0,5,0);
    circle(7,6);
    glPopMatrix();

    glPushMatrix();
    glTranslated(-5.5,1.0,1);
    glColor3f(0.0,0.39,0);
    glTranslatef(0,5,0);
    circle(3,2);
    glPopMatrix();

    glPushMatrix();
    glTranslated(-5.0,4.0,1);
    glColor3f(0.0,0.39,0);
    glTranslatef(0,5,0);
    circle(3,2);
    glPopMatrix();

    glPushMatrix();
    glTranslated(5.5,-0.5,1);
    glColor3f(0.0,0.39,0);
    glTranslatef(0,5,0);
    circle(4,3);
    glPopMatrix();

    glPushMatrix();
    glTranslated(5.0,4.0,1);
    glColor3f(0.0,0.39,0);
    glTranslatef(0,5,0);
    circle(3,2);
    glPopMatrix();

    glPushMatrix();
    glTranslated(0.0,6.0,1);
    glColor3f(0.0,0.39,0);
    glTranslatef(0,5,0);
    circle(4,2);
    glPopMatrix();

    glPushMatrix();
    glTranslated(-5.5,-3.0,1);
    glColor3f(0.0,0.39,0);
    glTranslatef(0,5,0);
    circle(4,3);
    glPopMatrix();

    glPushMatrix();
    glTranslated(5.5,-3.5,1);
    glColor3f(0.0,0.39,0);
    glTranslatef(0,5,0);
    circle(3,2);
    glPopMatrix();

    glPopMatrix();
    glPopMatrix();
   
    glPushMatrix();//Big tree-2
    glTranslated(-17,5,0);
    glScaled(0.5,0.2,0);
    glPushMatrix();
    glTranslated(-1,-10,1);
    glColor3f(0.55,0.27,0.0745);
    glBegin(GL_QUADS);
    glVertex2d(0.0,2.0);
    glVertex2d(.0,10.0);//steam
    glVertex2d(1.0,10.0);
    glVertex2d(1.0,2.0);
    glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslated(-0.5,0,0);
    glScaled(0.4,1,1);
    glPushMatrix();
    glColor3f(0.0,0.39,0); //large circle
    glTranslatef(0,5,0);
    circle(7,6);
    glPopMatrix();

    glPushMatrix();
    glTranslated(-5.5,1.0,1);
    glColor3f(0.0,0.39,0);
    glTranslatef(0,5,0);
    circle(3,2);
    glPopMatrix();

    glPushMatrix();
    glTranslated(-5.0,4.0,1);
    glColor3f(0.0,0.39,0);
    glTranslatef(0,5,0);
    circle(3,2);
    glPopMatrix();

    glPushMatrix();
    glTranslated(5.5,-0.5,1);
    glColor3f(0.0,0.39,0);
    glTranslatef(0,5,0);
    circle(4,3);
    glPopMatrix();

    glPushMatrix();
    glTranslated(5.0,4.0,1);
    glColor3f(0.0,0.39,0);
    glTranslatef(0,5,0);
    circle(3,2);
    glPopMatrix();

    glPushMatrix();
    glTranslated(0.0,6.0,1);
    glColor3f(0.0,0.39,0);
    glTranslatef(0,5,0);
    circle(4,2);
    glPopMatrix();

    glPushMatrix();
    glTranslated(-5.5,-3.0,1);
    glColor3f(0.0,0.39,0);
    glTranslatef(0,5,0);
    circle(4,3);
    glPopMatrix();

    glPushMatrix();
    glTranslated(5.5,-3.5,1);
    glColor3f(0.0,0.39,0);
    glTranslatef(0,5,0);
    circle(3,2);
    glPopMatrix();

    glPopMatrix();
    glPopMatrix();
}

void ground()
{

    glPushMatrix();
glColor3f(0.0,0.3,0);
glBegin(GL_QUADS);
    glVertex2d(-150.0,0.0);
    glVertex2d(150.0,0.0);
    glVertex2d(150.0,-50);
    glVertex2d(-150.0,-50);
    glEnd();
    glPopMatrix();
}

void compound()
{

    glPushMatrix();
    glTranslatef(0,20,0);
   
glPushMatrix();
    glBegin(GL_QUADS);
    glColor3f(0.5f, 0, 0.2f);
    glVertex2d(150.0,-16.5);//compound
    glVertex2d(-150.0,-16.5);
    glVertex2d(-150.0,-20);
    glVertex2d(150.0,-20);
    glEnd();
    glPopMatrix();
   
    glPushMatrix();
    glTranslatef(0,-1.2,0);
    glBegin(GL_LINES);
    glColor3f(1, 1, 1);//top_line
    glVertex2d(-20,-16.5);
    glVertex2d(20.0,-16.5);
    glEnd();
    glPopMatrix();
   
    glPushMatrix();
    glTranslatef(0,-2.4,0);
    glBegin(GL_LINES); //bottom_line
    glVertex2d(-20,-16.5);
    glVertex2d(20.0,-16.5);
    glEnd();
    glPopMatrix();
   
    glPushMatrix();
    //glRotatef(-90,0,0,1);
    glBegin(GL_LINES);
    glColor3f(1, 1, 1);
    glVertex2d(-20,-16.5);
    glVertex2d(20.0,-16.5);
    glEnd();
    glPopMatrix();
   
glPopMatrix();

glPushMatrix();
    glTranslatef(-15,-0.8,0);
    glBegin(GL_LINES);
    glColor3f(1,1,1);
    glVertex2d(0,4.3);            //1st
    glVertex2d(0,3.1);
    glEnd();
    glPopMatrix();
     
    glPushMatrix();
    glTranslatef(-10,-0.8,0);
    glBegin(GL_LINES);
    glColor3f(1,1,1);
    glVertex2d(0,4.3);            //1st
    glVertex2d(0,3.1);
    glEnd();
    glPopMatrix();
   
    glPushMatrix();
    glTranslatef(-5,-0.8,0);
    glBegin(GL_LINES);
    glColor3f(1,1,1);
    glVertex2d(0,4.3);            //1st
    glVertex2d(0,3.1);
    glEnd();
    glPopMatrix();
   
    glPushMatrix();
    glTranslatef(0,-0.8,0);
    glBegin(GL_LINES);
    glColor3f(1,1,1);
    glVertex2d(0,4.3);            //1st
    glVertex2d(0,3.1);
    glEnd();
    glPopMatrix();
   
    glPushMatrix();
    glTranslatef(5,-0.8,0);
    glBegin(GL_LINES);
    glColor3f(1,1,1);
    glVertex2d(0,4.3);            //1st
    glVertex2d(0,3.1);
    glEnd();
    glPopMatrix();
   
      glPushMatrix();
    glTranslatef(10,-0.8,0);
    glBegin(GL_LINES);
    glColor3f(1,1,1);
    glVertex2d(0,4.3);            //1st
    glVertex2d(0,3.1);
    glEnd();
    glPopMatrix();
   
    glPushMatrix();
    glTranslatef(15,-0.8,0);
    glBegin(GL_LINES);
    glColor3f(1,1,1);
    glVertex2d(0,4.3);            //1st
    glVertex2d(0,3.1);
    glEnd();
    glPopMatrix();
   
   
    glPushMatrix();
    glTranslatef(-2.5,-0.8,0);
    glBegin(GL_LINES);
    glColor3f(1,1,1);
    glVertex2d(0,3.1);            //2nd
    glVertex2d(0,1.9);
    glEnd();
    glPopMatrix();
   
    glPushMatrix();
    glTranslatef(-7.5,-0.8,0);
    glBegin(GL_LINES);
    glColor3f(1,1,1);
    glVertex2d(0,3.1);            //2nd
    glVertex2d(0,1.9);
    glEnd();
    glPopMatrix();
   
    glPushMatrix();
    glTranslatef(-12.5,-0.8,0);
    glBegin(GL_LINES);
    glColor3f(1,1,1);
    glVertex2d(0,3.1);            //2nd
    glVertex2d(0,1.9);
    glEnd();
    glPopMatrix();
   
    glPushMatrix();
    glTranslatef(-17.5,-0.8,0);
    glBegin(GL_LINES);
    glColor3f(1,1,1);
    glVertex2d(0,3.1);            //2nd
    glVertex2d(0,1.9);
    glEnd();
    glPopMatrix();
   
    glPushMatrix();
    glTranslatef(2.5,-0.8,0);
    glBegin(GL_LINES);
    glColor3f(1,1,1);
    glVertex2d(0,3.1);            //2nd
    glVertex2d(0,1.9);
    glEnd();
    glPopMatrix();
   
    glPushMatrix();
    glTranslatef(7.5,-0.8,0);
    glBegin(GL_LINES);
    glColor3f(1,1,1);
    glVertex2d(0,3.1);            //2nd
    glVertex2d(0,1.9);
    glEnd();
    glPopMatrix();
   
    glPushMatrix();
    glTranslatef(12.5,-0.8,0);
    glBegin(GL_LINES);
    glColor3f(1,1,1);
    glVertex2d(0,3.1);            //2nd
    glVertex2d(0,1.9);
    glEnd();
    glPopMatrix();
   
   
    glPushMatrix();
    glTranslatef(17.5,-0.8,0);
    glBegin(GL_LINES);
    glColor3f(1,1,1);
    glVertex2d(0,3.1);            //2nd
    glVertex2d(0,1.9);
    glEnd();
    glPopMatrix();
   
    glPopMatrix();
  glPushMatrix();
    glTranslatef(-15,-0.8,0);
    glBegin(GL_LINES);
    glColor3f(1,1,1);
    glVertex2d(0,1.9);            //3rd
    glVertex2d(0,0.8);
    glEnd();
    glPopMatrix();
     
    glPushMatrix();
    glTranslatef(-10,-0.8,0);
    glBegin(GL_LINES);
    glColor3f(1,1,1);
    glVertex2d(0,1.9);            //3rd
    glVertex2d(0,0.8);
    glEnd();
    glPopMatrix();
   
    glPushMatrix();
    glTranslatef(-5,-0.8,0);
    glBegin(GL_LINES);
    glColor3f(1,1,1);
    glVertex2d(0,1.9);            //3rd
    glVertex2d(0,0.8);
    glEnd();
    glPopMatrix();
   
    glPushMatrix();
    glTranslatef(0,-0.8,0);
    glBegin(GL_LINES);
    glColor3f(1,1,1);
    glVertex2d(0,1.9);            //3rd
    glVertex2d(0,0.8);
    glEnd();
    glPopMatrix();
   
    glPushMatrix();
    glTranslatef(5,-0.8,0);
    glBegin(GL_LINES);
    glColor3f(1,1,1);
    glVertex2d(0,1.9);            //3rd
    glVertex2d(0,0.8);
    glEnd();
    glPopMatrix();
   
    glPushMatrix();
    glTranslatef(10,-0.8,0);
    glBegin(GL_LINES);
    glColor3f(1,1,1);
    glVertex2d(0,1.9);            //3rd
    glVertex2d(0,0.8);
    glEnd();
    glPopMatrix();
   
    glPushMatrix();
    glTranslatef(15,-0.8,0);
    glBegin(GL_LINES);
    glColor3f(1,1,1);
    glVertex2d(0,1.9);            //3rd
    glVertex2d(0,0.8);
    glEnd();
    glPopMatrix();

}


void crow()
{

    crowleftx=crowleftx-0.009;
    if(crowleftx<-22)
    {
        crowleftx=20;
    }
    glPushMatrix();
    glTranslated(0+crowleftx,8.5,1);
    glScaled(0.5,0.2,1);
    glLineWidth(3.0);
glBegin(GL_LINES);

    glPushMatrix();
    glTranslated(0,0,1);
    glColor3f(0,0,0);
    glVertex2f(0,0);
glVertex2f(1,2);

glVertex2f(0,0);
glVertex2f(-1,2);
    glPopMatrix();

    glPushMatrix();
    glTranslated(1.5,1,1),
    glVertex2f(3,0);
glVertex2f(4,2);

glVertex2f(3,0);
glVertex2f(2,2);
    glPopMatrix();

    glPushMatrix();
    glTranslated(4,1.5,1),
    glVertex2f(2,-4);
glVertex2f(1,-2);

glVertex2f(2,-4);
glVertex2f(3,-2);
    glPopMatrix();

    glPushMatrix();
    glTranslated(4.5,-0.7,1),
    glVertex2f(-1,-4);
glVertex2f(0,-2);

glVertex2f(-1,-4);
glVertex2f(-2,-2);
    glPopMatrix();

   
    glEnd();
    glPopMatrix();

}

void sun()
{
glMatrixMode(GL_MODELVIEW);
    glPushMatrix();
    glTranslated(-4,8,0);
    glScaled(0.3,0.3,0);
    glColor3f(1,0.843,0);
    glutSolidSphere(3,200,300);
    //circle(2.5,3.5);
    glPopMatrix();
}


void cloudLeft()
{
    cloudleftx=cloudleftx-0.001;
    if(cloudleftx<-4)
    {
        cloudleftx=40;
    }

    glPushMatrix();
    glTranslated(-20+cloudleftx,8.5,1);

    glScaled(0.5,0.2,1);
    glColor3f(1.0f,1.0f,1.0f);
    glPushMatrix();
    glTranslated(0,0,1),
    circle(1.5,2.5);
    glPopMatrix();

    glPushMatrix();
    glTranslated(1.5,1,1),
    circle(2,3);
glPopMatrix();

    glPushMatrix();
    glTranslated(4,1.5,1),
    circle(2,3);
    glPopMatrix();

    glPushMatrix();
    glTranslated(4.5,-0.7,1),
    circle(2.5,2.0);
    glPopMatrix();

    glPushMatrix();
    glTranslated(2.0,-1.0,1),
    circle(1.5,2.5);
    glPopMatrix();
    glPopMatrix();

}

void cloudRightUp()
{
cloudrightupx-=0.001;
    if(cloudrightupx<-35)
    {
        cloudrightupx=8;
    }
    glPushMatrix();
    glTranslatef(14+cloudrightupx,16.5,1);
    glScaled(0.5,0.2,0);
    glColor3f(1.0,1.0,1.0);
    glPushMatrix();
    glTranslated(0,-38,1),
    circle(1.5,2.5);
    glPopMatrix();

    glPushMatrix();
    glTranslated(1,-35,1),
    circle(2,3);
    glPopMatrix();

    glPushMatrix();

    glTranslated(3,-35,1),
    circle(2,3);
    glPopMatrix();

    glPushMatrix();

    glTranslated(4.5,-37.5,1);
    circle(1.5,2.5);
    glPopMatrix();

    glPushMatrix();
    glTranslated(2.5,-38.5,1),
    circle(1.5,2.5);
    glPopMatrix();
    glPopMatrix();

}

void cloudRight()
{

    cloudrightx-=0.003;
    if(cloudrightx<-35)
    {
        cloudrightx=8;
    }

    glPushMatrix();
    glTranslated(12+cloudrightx,16,1);
    glScaled(0.5,0.2,1);
    glColor3f(1.0,1.0,1.0);
    glPushMatrix();
    glTranslated(0,-38,1),
    circle(1.5,2.5);
    glPopMatrix();

    glPushMatrix();
    glTranslated(1,-35,1),
    circle(2,3);
    glPopMatrix();

    glPushMatrix();
    glTranslated(3,-35,1),
    circle(2,3);
    glPopMatrix();

    glPushMatrix();
    glTranslated(4.5,-37.5,1),
    circle(1.5,2.5);
    glPopMatrix();

    glPushMatrix();
    glTranslated(2.5,-38.5,1),
    circle(1.5,2.5);
    glPopMatrix();
    glPopMatrix();
}

void cloudMiddle()
{
    cloudmiddlex=cloudmiddlex-0.0035;
    if(cloudmiddlex<-20)
    {
        cloudmiddlex=30;
    }
    glPushMatrix();
    glTranslated(-3.5+cloudmiddlex,16,1);
    glScaled(0.5,0.2,1);
    glColor3f(1.0f,1.0f,1.0f);
    glPushMatrix();
    glTranslated(0,-38,1),
    circle(1.5,2.5);
    glPopMatrix();

    glPushMatrix();
    glTranslated(1,-35,1),
    circle(2,3);
    glPopMatrix();

    glPushMatrix();
    glTranslated(3,-35,1),
    circle(2,3);
    glPopMatrix();

    glPushMatrix();
    glTranslated(4.5,-37.5,1),
    circle(1.5,2.5);
    glPopMatrix();

    glPushMatrix();
    glTranslated(2.5,-38.5,1),
    circle(1.5,2.5);
    glPopMatrix();
    glPopMatrix();

}

void babySwing()
{
    glPushMatrix();
   

    if(isbaby==1 /*&& (dolnay==0|| dolnay>=1 || dolnay<=-1)*/)
    {

        if(dolnay==0)
        {
            glTranslated(-14,1,0);
            glScaled(0.05,0.05,0);
            //glTranslatef(20,24+dolnay,0);
        }
        else if(dolnay>=1 )
        {
            glTranslated(-14,-0.4+dolnay,0);
            glScaled(0.04,0.04,0);
            dolnay=-0.1;

            //dolnay=-1;
            //glTranslatef(20,26.5+dolnay,0);
        }
        else if(dolnay<=-1 )
        {
            glTranslated(-14,2.4+dolnay,0);
            //glTranslated(-14,1,0);
            glScaled(0.06,0.06,0);
            dolnay=0.1;
            //printf("hi");
            //dolnay=1;
            //glTranslatef(20,23+dolnay,0);
        }
        else if(dolnay>0.1 && dolnay <1)
        {
            //glTranslated(-14,0.65+dolnay,0);
            glTranslated(0,-0.29+dolnay,0);
            glTranslated(-14,1,0);
            glScaled(0.05,0.05,0);
            countdolna++;
            //printf("hi");
        }

        else if(dolnay<-0.1 && dolnay >-1)
        {
            glTranslated(-14,1.35+dolnay,0);
            glScaled(0.05,0.05,0);
        }




        glPushMatrix();   //jama top
        glRotated(-20,0,1,0);
        glColor3f(1,0,0);
        glBegin(GL_POLYGON);
        glVertex2d(-6,-6);
        glVertex2d(-11,-9);
        glVertex2d(-9,-13);
        glVertex2d(-6,-11);
        glVertex2d(-6,-22);
        glVertex2d(6,-22);
        glVertex2d(6,-11);
        glVertex2d(9,-13);
        glVertex2d(11,-9);
        glVertex2d(6,-6);
        glVertex2d(4,-10);
        glVertex2d(-4,-10);
        glEnd();
        glPopMatrix();

        glPushMatrix();     //left hand
        glRotated(-20,0,1,0);
        glColor3f(0.87,0.72,0.53);
        glBegin(GL_QUADS);
        glVertex2d(-11,-9);
        glVertex2d(-9,-13);
        glVertex2d(-13,-20);
        glVertex2d(-16,-18);
        glEnd();

        glPopMatrix();

        glPushMatrix();//left hand palm
        glRotated(-20,0,1,0);
        glTranslated(-15,-20,0);
        glColor3f(0.87,0.72,0.53);
        circle(3,2.5);
        glPopMatrix();


        glPushMatrix();     //right hand
        glRotated(-20,0,1,0);
        glColor3f(0.87,0.72,0.53);
        glBegin(GL_QUADS);
        glVertex2d(11,-9);
        glVertex2d(9,-13);
        glVertex2d(13,-20);
        glVertex2d(16,-18);
        glEnd();
        glPopMatrix();

        glPushMatrix();         //right hand palm
        glRotated(-20,0,1,0);
        glTranslated(15,-20,0);

        glColor3f(0.87,0.72,0.53);
        circle(3,2.5);
        glPopMatrix();


        glPushMatrix();     //skirt
        glColor3f(0,0,1);
        glBegin(GL_QUADS);
        glVertex2d(-6,-22);
        glVertex2d(6,-22);
        glVertex2d(-1,-28);
        glVertex2d(-16,-28);
        glEnd();
        glPopMatrix();

        glPushMatrix();         //left leg
        glColor3f(0.87,0.72,0.53);
        glBegin(GL_QUADS);
        glVertex2d(-13,-28);
        glVertex2d(-8,-28);
        glVertex2d(-11,-32);
        glVertex2d(-17,-32);
        glEnd();
        glPopMatrix();

        glPushMatrix();     //right leg
        glColor3f(0.87,0.72,0.53);
        glBegin(GL_QUADS);
        glVertex2d(-2,-28);
        glVertex2d(-7,-28);
        glVertex2d(-10,-32);
        glVertex2d(-5,-32);
        glEnd();
        glPopMatrix();

        glPushMatrix();     //right shoe
        glColor3f(0,0,0);
        glBegin(GL_QUADS);
        glVertex2d(-5,-32);
        glVertex2d(-10,-32);
        glVertex2d(-13,-35);
        glVertex2d(-6,-35);
        glEnd();
        glPopMatrix();

        glPushMatrix();         //left shoe
        glColor3f(0,0,0);
        glBegin(GL_QUADS);
        glVertex2d(-17,-32);
        glVertex2d(-11,-32);
        glVertex2d(-12,-35);
        glVertex2d(-20,-35);
        glEnd();
        glPopMatrix();



        glPushMatrix(); //hair
        glRotated(-20,0,1,0);
        glColor3f(0,0,0);
        circle(9,10);
        glPopMatrix();



        glPushMatrix();         //head, neck, nose ,eye, lips
        glRotated(-20,0,1,0);
        glColor3f(0.87,0.72,0.53);
        circle(7,6);            //head
        glBegin(GL_QUADS);      //neck
        glVertex2d(-6,-6);
        glVertex2d(6,-6);
        glVertex2d(4,-10);
        glVertex2d(-4,-10);
        glEnd();
        glPushMatrix();
        glColor3f(0,0,0);
        glBegin(GL_LINES);      //right eye

        glVertex2d(4,3);
        glVertex2d(1,3);

        glEnd();
        glBegin(GL_LINES);      //lips

        glVertex2d(2,-3);
        glVertex2d(-2,-3);

        glEnd();
        glPopMatrix();

        glPushMatrix();
        glColor3f(0,0,0);
        glBegin(GL_LINES);      //left eye

        glVertex2d(-4,3);
        glVertex2d(-1,3);

        glEnd();
        circle(0.5,2);      //nose
        glPopMatrix();

        glPopMatrix();
    }
    glPopMatrix();
}

void swing()
{
    glPushMatrix();
    glTranslated(-18,-1.5,0);
    glScaled(0.7,0.4,0);

    glColor3f(0,0,1);

    glPushMatrix(); //left bar
    glBegin(GL_QUADS);
    glVertex2d(0.0,0.0);
    glVertex2d(0.0,10.0);
    glVertex2d(0.4,10.0);
    glVertex2d(0.4,0.0);
    glEnd();
    glPopMatrix();

    glPushMatrix(); //right bar
    glTranslated(10,0,1);
    glBegin(GL_QUADS);
    glVertex2d(0.0,0.0);
    glVertex2d(0.0,10.0);
    glVertex2d(0.4,10.0);
    glVertex2d(0.4,0.0);
    glEnd();
    glPopMatrix();

    glPushMatrix();  //up bar
    glTranslated(0,9,1);
    glRotatef(-90,0,0,1);

    glBegin(GL_QUADS);
    glVertex2d(0.0,0.0);
    glVertex2d(0.0,10.4);
    glVertex2d(0.4,10.4);
    glVertex2d(0.4,0.0);
    glEnd();
    glPopMatrix();

   

    glPushMatrix();  //left line
    glTranslated(2.9,3,1);
    glBegin(GL_QUADS);
    glVertex2d(0.0,dolnay);
    glVertex2d(0.0,6.0);
    glVertex2d(0.1,6.0);
    glVertex2d(0.1,dolnay);
    glEnd();
    glPopMatrix();

    glPushMatrix();  //right side
    glTranslated(7.7,3,1);
    glBegin(GL_QUADS);
    glVertex2d(0,dolnay);
    glVertex2d(0,6.0);
    glVertex2d(0.1,6.0);
    glVertex2d(0.1,dolnay);
    glEnd();
    glPopMatrix();



    glPushMatrix(); //sitting table

    glTranslated(1.8,3,1);
    glBegin(GL_QUADS);
    glColor3f(0.55,0.27,0.0745);
    glVertex2d(1.0,dolnay+1);
    glVertex2d(6.0,dolnay+1);
    glVertex2d(7.0,dolnay);
    glVertex2d(0.0,dolnay);


    glEnd();
    glPopMatrix();

    glPushMatrix();  //under extra line
    glTranslated(1.8,2.7,1);
    glBegin(GL_QUADS);
    glVertex2d(0.0,dolnay);
    glVertex2d(7,dolnay);
    glVertex2d(7,dolnay+0.1);
    glVertex2d(0,dolnay+0.1);
    glEnd();
    glPopMatrix();

    //glPopMatrix();





    glPopMatrix();
    babySwing();



}

void gaintWheel()
{
    glPushMatrix();
   

    glPushMatrix();  //stand
    glTranslated(13,-5,1);
    glScaled(0.4,0.25,0);
    glColor3f(0.184,0.31,0.31);
    glBegin(GL_QUADS);//stand
    glVertex2d(0,-10);
    glVertex2d(1,-10);
    glVertex2d(1,30);
    glVertex2d(0,30);
    glEnd();
 

    glPopMatrix();


    glPushMatrix();
    glTranslated(13.25,2.5,1);
    glScaled(0.35,0.2,0);
    glRotated(angle,0,0,1);
    glPushMatrix();
    glTranslatef(10,13,0);
    glRotated(-angle,0,0,1);
    glColor3f(1,0,0);
    glBegin(GL_LINES);
    glVertex2d(0,0);
    glVertex2d(0,-3);
    glEnd();
    glPushMatrix();
    glBegin(GL_QUADS);
    glColor3f(0.545,0,0);
    glVertex2d(-1.9,-2.9);
    glVertex2d(1.9,-2.9);//right-top box
    glVertex2d(1.9,-7.9);
    glVertex2d(-1.9,-7.9);
    glEnd();

    glBegin(GL_LINES);
    glColor3f(0,0,0);
    glVertex2d(-1.5,-3.9);
    glColor3f(0,0,0);
    glVertex2d(1.5,-3.9);
    glColor3f(0,0,0);
    glVertex2d(-1.5,-4.9);
    glColor3f(0,0,0);
    glVertex2d(1.5,-4.9);
    glColor3f(0,0,0);
    glVertex2d(-1.5,-5.9);
    glColor3f(0,0,0);
    glVertex2d(1.5,-5.9);
    glColor3f(0,0,0);
    glVertex2d(-1.5,-6.9);
    glColor3f(0,0,0);
    glVertex2d(1.5,-6.9);
    glEnd();

    glPopMatrix();

    glPopMatrix();
    glPushMatrix();
    glTranslatef(10,-13,0);
    glRotated(-angle,0,0,1);
    glColor3f(1,0,0);
    glBegin(GL_LINES);
    glVertex2d(0,0);
    glVertex2d(0,-3);
    glEnd();
    glPushMatrix();
    glBegin(GL_QUADS);
    glColor3f(0.545,0,0);
    glVertex2d(-1.9,-2.9);
    glVertex2d(1.9,-2.9);
    glVertex2d(1.9,-7.9);//right-bottom box
    glVertex2d(-1.9,-7.9);
    glEnd();

    glBegin(GL_LINES);
    glColor3f(0,0,0);
    glVertex2d(-1.5,-3.9);
    glVertex2d(1.5,-3.9);
    glVertex2d(-1.5,-4.9);
    glVertex2d(1.5,-4.9);
    glVertex2d(-1.5,-5.9);
    glVertex2d(1.5,-5.9);
    glVertex2d(-1.5,-6.9);
    glVertex2d(1.5,-6.9);
    glEnd();

    glPopMatrix();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(-10,-13,0);
    glRotated(-angle,0,0,1);
    glColor3f(1,0,0);
    glBegin(GL_LINES);
    glVertex2d(0,0);
    glVertex2d(0,-3);
    glEnd();

    if(isbaby==5)
    {
        baby();
    }

    glPushMatrix();
    glBegin(GL_QUADS); //left-bottom box
    glColor3f(0.545,0,0);
    glVertex2d(-1.9,-2.9);
    glVertex2d(1.9,-2.9);
    glVertex2d(1.9,-7.9);
    glVertex2d(-1.9,-7.9);
    glEnd();


    glBegin(GL_LINES);
    glColor3f(0,0,0);
    glVertex2d(-1.5,-3.9);
    glVertex2d(1.5,-3.9);
    glVertex2d(-1.5,-4.9);
    glVertex2d(1.5,-4.9);
    glVertex2d(-1.5,-5.9);
    glVertex2d(1.5,-5.9);
    glVertex2d(-1.5,-6.9);
    glVertex2d(1.5,-6.9);
    glEnd();


    glPopMatrix();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(-10,13,0);
    glRotated(-angle,0,0,1);
    glColor3f(1,0,0);
    glBegin(GL_LINES);
    glVertex2d(0,0);
    glVertex2d(0,-3);
    glEnd();
    glPushMatrix();
    glBegin(GL_QUADS);
    glColor3f(0.545,0,0);
    glVertex2d(-1.9,-2.9);
    glVertex2d(1.9,-2.9);
    glVertex2d(1.9,-7.9);
    glVertex2d(-1.9,-7.9);
    glEnd();

    glBegin(GL_LINES);
    glColor3f(0,0,0);
    glVertex2d(-1.5,-3.9);
    glVertex2d(1.5,-3.9);
    glVertex2d(-1.5,-4.9);
    glVertex2d(1.5,-4.9);
    glVertex2d(-1.5,-5.9);
    glVertex2d(1.5,-5.9);
    glVertex2d(-1.5,-6.9);
    glVertex2d(1.5,-6.9);
    glEnd();

    glPopMatrix();
    glPopMatrix();

    glPushMatrix();
    glColor3f(1,0,0);
    glBegin(GL_LINES);

    glVertex2d(0,0);
    glVertex2d(10,13);
   
    glVertex2d(0,0);
    glVertex2d(10,-13);
    glVertex2d(0,0);       //4 cross lines
    glVertex2d(-10,-13);
    glVertex2d(0,0);
    glVertex2d(-10,13);

    glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslated(0,0,0);
    glColor3f(0.545,0,0);
    circle(1,1);
    glPopMatrix();
   
    glPushMatrix();
    glTranslated(0,0,0);
    glColor3f(0.9,0.9,0); //circle
    circle(1,1);
    glPopMatrix();


    glPopMatrix();
    glPopMatrix();
   

}

void bench()
{

    glPushMatrix();
    glTranslated(-8,-3,1);
    glColor3f(0.55,0.27,0.0745);
    //glRotated(25,0,1,1);
    glScaled(0.8,0.6,1);
    glPushMatrix(); //Bench
    glTranslated(1.8,3,1);
    glBegin(GL_QUADS);
    glVertex2d(0.0,0.0);
    glVertex2d(1.0,1.0);
    glVertex2d(6.5,1.0);
    glVertex2d(7.1,0.0);
    glEnd();
    glPopMatrix();
   
    glPushMatrix();  
    glTranslated(2.7,3,1);
    glBegin(GL_QUADS);
    glVertex2d(0.0,0.0); //Bench-top
    glVertex2d(5.8,0.0);
    glVertex2d(6.1,2.8);
    glVertex2d(-0.3,2.8);
    glEnd();
    glPopMatrix();
   
    glPushMatrix();
    glTranslatef(2.6,3.9,1);
    glColor3f(0,0,0);
    glBegin(GL_QUADS);
    glVertex2f(0.0,0.0); // horizontal line-top
    glVertex2f(5.2,0.0);
    glVertex2f(5.2,0.01);
    glVertex2f(0.0,0.01);
    glEnd();
    glPopMatrix();

    glPushMatrix();
    glRotatef(-90,0,0,1);
    glTranslated(-2.8,1.8,1);
    glColor3f(0.55,0.27,0.0745);
    glBegin(GL_QUADS);   // horizontal line-bottom
    glVertex2d(0.0,0.0);
    glVertex2d(0.0,7.0);
    glVertex2d(0.1,7.0);
    glVertex2d(0.1,0.0);
    glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslated(3.1,1.7,1);
    glBegin(GL_QUADS);
    glVertex2d(0.0,0.0); //left leg
    glVertex2d(0.0,1.0);
    glVertex2d(0.4,1.0);
    glVertex2d(0.4,0.0);
    glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslated(7,1.7,1);
    glBegin(GL_QUADS);
    glVertex2d(0.0,0.0);
    glVertex2d(0.0,1.0); //right leg
    glVertex2d(0.4,1.0);
    glVertex2d(0.4,0.0);
    glEnd();
    glPopMatrix();
   
    //child-1
   
    glRotatef(1,1,1,1);
    glTranslated(3.2,5.2,0);
   

    glScalef(0.07,0.07,0);
    glPushMatrix();   //child top
    glColor3f(1,0.5,0);
    glBegin(GL_POLYGON);
    glVertex2d(-6,-6);
    glVertex2d(-11,-9);
    glVertex2d(-9,-13);
    glVertex2d(-6,-11);
    glVertex2d(-6,-22);
    glVertex2d(6,-22);
    glVertex2d(6,-11);
    glVertex2d(9,-13);
    glVertex2d(11,-9);
    glVertex2d(6,-6);
    glVertex2d(4,-10);
    glVertex2d(-4,-10);
    glEnd();
    glPopMatrix();

    glPushMatrix();     //left hand
    glColor3f(1,0.94,0.83);
    glBegin(GL_QUADS);
    glVertex2d(-11,-9);
    glVertex2d(-9,-13);
    glVertex2d(-13,-20);
    glVertex2d(-16,-18);
    glEnd();

    glPopMatrix();

    glPushMatrix();     //left hand palm
    glTranslated(-15,-20,0);
    glColor3f(1,0.94,0.83);
    circle(3,2.5);
    glPopMatrix();


    glPushMatrix();     //right hand
    glColor3f(1,0.94,0.83);
    glBegin(GL_QUADS);
    glVertex2d(11,-9);
    glVertex2d(9,-13);
    glVertex2d(13,-20);
    glVertex2d(16,-18);
    glEnd();
    glPopMatrix();

    glPushMatrix();         //right hand palm
    glTranslated(15,-20,0);
    glColor3f(1,0.94,0.83);
    circle(3,2.5);
    glPopMatrix();


    glPushMatrix();     //skirt
    glColor3f(1,0.196,0.8);
    glBegin(GL_QUADS);
    glVertex2d(-6,-22);
    glVertex2d(6,-22);
    glVertex2d(4,-32);
    glVertex2d(-16,-30);
    glEnd();
    glPopMatrix();

    glPushMatrix();         //left leg
    glTranslated(-6,1.5,0);
    glColor3f(1,0.94,0.83);
    glBegin(GL_QUADS);
    glVertex2d(-6,-32);
    glVertex2d(-2,-32);
    glVertex2d(-2,-38);
    glVertex2d(-6,-38);
    glEnd();
    glPopMatrix();

    glPushMatrix();     //right leg
    glTranslated(-5,0.8,0);
    glColor3f(1,0.94,0.83);
    glBegin(GL_QUADS);
    glVertex2d(6,-32);
    glVertex2d(2,-32);
    glVertex2d(2,-38);
    glVertex2d(6,-38);
    glEnd();
    glPopMatrix();

    glPushMatrix();     //right shoe
    glTranslated(-5,0.8,0);
    glColor3f(0,0,0);
    glBegin(GL_QUADS);
    glVertex2d(6,-42);
    glVertex2d(-2,-42);
    glVertex2d(2,-38);
    glVertex2d(6,-38);
    glEnd();
    glPopMatrix();

    glPushMatrix();         //left shoe
    glTranslated(-6,1.5,0);
    glColor3f(0,0,0);
    glBegin(GL_QUADS);
    glVertex2d(-10,-42);
    glVertex2d(-2,-42);
    glVertex2d(-2,-38);
    glVertex2d(-6,-38);
    glEnd();
    glPopMatrix();



    glPushMatrix(); //hair
    glColor3f(0,0,0);
    circle(9,10);
    glPopMatrix();



    glPushMatrix();         //head, neck, nose ,eye, lips
    glColor3f(1,0.94,0.83);
    circle(7,6);            //head
    glBegin(GL_QUADS);      //neck
    glVertex2d(-6,-6);
    glVertex2d(6,-6);
    glVertex2d(4,-10);
    glVertex2d(-4,-10);
    glEnd();
    glPushMatrix();
    glColor3f(0,0,0);
    glBegin(GL_LINES);      //right eye

    glVertex2d(4,3);
    glVertex2d(1,3);

    glEnd();
    glBegin(GL_LINES);      //lips

    glVertex2d(2,-3);
    glVertex2d(-2,-3);

    glEnd();
    glPopMatrix();

    glPushMatrix();
    glColor3f(0,0,0);
    glBegin(GL_LINES);      //left eye

    glVertex2d(-4,3);
    glVertex2d(-1,3);

    glEnd();
    circle(0.5,2);      //nose
    glPopMatrix();

    glPopMatrix();
   
   
    glPopMatrix();

    glPushMatrix();
    if(isbaby==3)
    {
        glTranslated(-3.5,0.5,0);
        glScaled(0.05,0.06,0);
        glPushMatrix();   //jama top
        glColor3f(1,0,0);
        glBegin(GL_POLYGON);
        glVertex2d(-6,-6);
        glVertex2d(-11,-9);
        glVertex2d(-9,-13);
        glVertex2d(-6,-11);
        glVertex2d(-6,-22);
        glVertex2d(6,-22);
        glVertex2d(6,-11);
        glVertex2d(9,-13);
        glVertex2d(11,-9);
        glVertex2d(6,-6);
        glVertex2d(4,-10);
        glVertex2d(-4,-10);
        glEnd();
        glPopMatrix();

        glPushMatrix();     //left hand
        glColor3f(0.87,0.72,0.53);
        glRotated(-15,0,1,0);
        glBegin(GL_QUADS);
        glVertex2d(-11,-9);
        glVertex2d(-9,-13);
        glVertex2d(-13,-20);
        glVertex2d(-16,-18);
        glEnd();

        glPopMatrix();

        glPushMatrix();     //left hand palm
        glTranslated(-15,-18.5,0);
        glColor3f(0.87,0.72,0.53);
        circle(3.3,2.7);
        glPopMatrix();


        glPushMatrix();     //right hand
        glColor3f(0.87,0.72,0.53);
        glBegin(GL_QUADS);
        glVertex2d(11,-9);
        glVertex2d(9,-13);
        glVertex2d(13,-20);
        glVertex2d(16,-18);
        glEnd();
        glPopMatrix();

        glPushMatrix();         //right hand palm
        glTranslated(15,-20,0);
        glColor3f(0.87,0.72,0.53);
        circle(3,2.5);
        glPopMatrix();


        glPushMatrix();     //skirt
        glColor3f(0,0,1);
        glBegin(GL_QUADS);
        glVertex2d(-6,-22);
        glVertex2d(6,-22);
        glVertex2d(4,-32);
        glVertex2d(-16,-30);
        glEnd();
        glPopMatrix();

        glPushMatrix();         //left leg
        glTranslated(-6,1.5,0);
        glColor3f(0.87,0.72,0.53);
        glBegin(GL_QUADS);
        glVertex2d(-6,-32);
        glVertex2d(-2,-32);
        glVertex2d(-2,-38);
        glVertex2d(-6,-38);
        glEnd();
        glPopMatrix();

        glPushMatrix();     //right leg
        glTranslated(-5,0.8,0);
        glColor3f(0.87,0.72,0.53);
        glBegin(GL_QUADS);
        glVertex2d(6,-32);
        glVertex2d(2,-32);
        glVertex2d(2,-38);
        glVertex2d(6,-38);
        glEnd();
        glPopMatrix();

        glPushMatrix();     //right shoe
        glTranslated(-5,0.8,0);
        glColor3f(0,0,0);
        glBegin(GL_QUADS);
        glVertex2d(6,-42);
        glVertex2d(-2,-42);
        glVertex2d(2,-38);
        glVertex2d(6,-38);
        glEnd();
        glPopMatrix();

        glPushMatrix();         //left shoe
        glTranslated(-6,1.5,0);
        glColor3f(0,0,0);
        glBegin(GL_QUADS);
        glVertex2d(-10,-42);
        glVertex2d(-2,-42);
        glVertex2d(-2,-38);
        glVertex2d(-6,-38);
        glEnd();
        glPopMatrix();



        glPushMatrix(); //hair
        glColor3f(0,0,0);
        circle(9,10);
        glPopMatrix();



        glPushMatrix();         //head, neck, nose ,eye, lips
        glColor3f(0.87,0.72,0.53);
        circle(7,6);            //head
        glBegin(GL_QUADS);      //neck
        glVertex2d(-6,-6);
        glVertex2d(6,-6);
        glVertex2d(4,-10);
        glVertex2d(-4,-10);
        glEnd();
        glPopMatrix();
        glPushMatrix();
        glColor3f(0,0,0);
        glBegin(GL_LINES);      //right eye

        glVertex2d(4,3);
        glVertex2d(1,3);

        glEnd();
        glBegin(GL_LINES);      //lips

        glVertex2d(2,-3);
        glVertex2d(-2,-3);

        glEnd();
        glPopMatrix();

        glPushMatrix();
        glColor3f(0,0,0);
        glBegin(GL_LINES);      //left eye

        glVertex2d(-4,3);
        glVertex2d(-1,3);

        glEnd();
        circle(0.5,2);      //nose
        glPopMatrix();
    }
    glPopMatrix();
}


void baby()
{
    glPushMatrix();
    if(isbaby==0)
    {
        glTranslated(0+bx,0+by,0);
        glScalef(0.05,0.07,0);
    }

    else if(isbaby==5)
    {
        glTranslated(0,1.5,0);
        glScaled(0.15,0.2,0);
    }
    else if(isbaby==6)
    {
        glTranslated(0+bx,0+by,0);
        glScalef(0.04,0.06,0);
    }

   
    glPushMatrix();   //jama top
    glColor3f(1,0,0);
    glBegin(GL_POLYGON);
    glVertex2d(-6,-6);
    glVertex2d(-11,-9);
    glVertex2d(-9,-13);
    glVertex2d(-6,-11);
    glVertex2d(-6,-22);
    glVertex2d(6,-22);
    glVertex2d(6,-11);
    glVertex2d(9,-13);
    glVertex2d(11,-9);
    glVertex2d(6,-6);
    glVertex2d(4,-10);
    glVertex2d(-4,-10);
    glEnd();
    glPopMatrix();

    glPushMatrix();     //left hand
    glColor3f(0.87,0.72,0.53);
    glBegin(GL_QUADS);
    glVertex2d(-11,-9);
    glVertex2d(-9,-13);
    glVertex2d(-13,-20);
    glVertex2d(-16,-18);
    glEnd();

    glPopMatrix();

    glPushMatrix();     //left hand palm
    glTranslated(-15,-20,0);
    glColor3f(0.87,0.72,0.53);
    circle(3,2.5);
    glPopMatrix();


    glPushMatrix();     //right hand
    glColor3f(0.87,0.72,0.53);
    glBegin(GL_QUADS);
    glVertex2d(11,-9);
    glVertex2d(9,-13);
    glVertex2d(13,-20);
    glVertex2d(16,-18);
    glEnd();
    glPopMatrix();

    glPushMatrix();         //right hand palm
    glTranslated(15,-20,0);
    glColor3f(0.87,0.72,0.53);
    circle(3,2.5);
    glPopMatrix();


    glPushMatrix();     //skirt
    glColor3f(0,0,1);
    glBegin(GL_QUADS);
    glVertex2d(-6,-22);
    glVertex2d(6,-22);
    glVertex2d(13,-32);
    glVertex2d(-13,-32);
    glEnd();
    glPopMatrix();

    glPushMatrix();         //left leg
    glColor3f(0.87,0.72,0.53);
    glBegin(GL_QUADS);
    glVertex2d(-6,-32);
    glVertex2d(-2,-32);
    glVertex2d(-2,-38);
    glVertex2d(-6,-38);
    glEnd();
    glPopMatrix();

    glPushMatrix();     //right leg
    glColor3f(0.87,0.72,0.53);
    glBegin(GL_QUADS);
    glVertex2d(6,-32);
    glVertex2d(2,-32);
    glVertex2d(2,-38);
    glVertex2d(6,-38);
    glEnd();
    glPopMatrix();

    glPushMatrix();     //right shoe
    glColor3f(0,0,0);
    glBegin(GL_QUADS);
    glVertex2d(10,-42);
    glVertex2d(2,-42);
    glVertex2d(2,-38);
    glVertex2d(6,-38);
    glEnd();
    glPopMatrix();

    glPushMatrix();         //left shoe
    glColor3f(0,0,0);
    glBegin(GL_QUADS);
    glVertex2d(-10,-42);
    glVertex2d(-2,-42);
    glVertex2d(-2,-38);
    glVertex2d(-6,-38);
    glEnd();
    glPopMatrix();

    glPushMatrix(); //hair
    glColor3f(0,0,0);
    circle(9,10);
    glPopMatrix();

    glPushMatrix();         //head, neck, nose ,eye, lips
    glColor3f(0.87,0.72,0.53);
    circle(7,6);            //head
    glBegin(GL_QUADS);      //neck
    glVertex2d(-6,-6);
    glVertex2d(6,-6);
    glVertex2d(4,-10);
    glVertex2d(-4,-10);
    glEnd();
    glPushMatrix();
    glColor3f(0,0,0);
    glBegin(GL_LINES);      //right eye

    glVertex2d(4,3);
    glVertex2d(1,3);

    glEnd();
    glBegin(GL_LINES);      //lips

    glVertex2d(2,-3);
    glVertex2d(-2,-3);

    glEnd();
    glPopMatrix();

    glPushMatrix();
    glColor3f(0,0,0);
    glBegin(GL_LINES);      //left eye

    glVertex2d(-4,3);
    glVertex2d(-1,3);

    glEnd();
    circle(0.5,2);      //nose
    glPopMatrix();

    glPopMatrix();


    glPopMatrix();
}

void babySlide()
{


    glPushMatrix();

    if(isbaby==7 && step==4)
    {
       

        glTranslatef(3.5+stepx,-1.7+stepy,0);
        glScaled(0.04,0.06,0);
        //glRotated(20,1,1,0);

        glPushMatrix();   //jama top
        glRotated(-20,0,1,0);
        glColor3f(1,0,0);
        glBegin(GL_POLYGON);
        glVertex2d(-6,-6);
        glVertex2d(-11,-9);
        glVertex2d(-9,-13);
        glVertex2d(-6,-11);
        glVertex2d(-6,-22);
        glVertex2d(6,-22);
        glVertex2d(6,-11);
        glVertex2d(9,-13);
        glVertex2d(11,-9);
        glVertex2d(6,-6);
        glVertex2d(4,-10);
        glVertex2d(-4,-10);
        glEnd();
        glPopMatrix();

        glPushMatrix();     //left hand
        glRotated(-20,0,1,0);
        glColor3f(0.87,0.72,0.53);
        glBegin(GL_QUADS);
        glVertex2d(-11,-9);
        glVertex2d(-9,-13);
        glVertex2d(-13,-20);
        glVertex2d(-16,-18);
        glEnd();

        glPopMatrix();

        glPushMatrix();//left hand palm
        glRotated(-20,0,1,0);
        glTranslated(-15,-20,0);
        glColor3f(0.87,0.72,0.53);
        circle(3,2.5);
        glPopMatrix();


        glPushMatrix();     //right hand
        glRotated(-20,0,1,0);
        glColor3f(0.87,0.72,0.53);
        glBegin(GL_QUADS);
        glVertex2d(11,-9);
        glVertex2d(9,-13);
        glVertex2d(13,-20);
        glVertex2d(16,-18);
        glEnd();
        glPopMatrix();

        glPushMatrix();         //right hand palm
        glRotated(-20,0,1,0);
        glTranslated(15,-20,0);

        glColor3f(0.87,0.72,0.53);
        circle(3,2.5);
        glPopMatrix();


        glPushMatrix();     //skirt
        glColor3f(0,0,1);
        glBegin(GL_QUADS);
        glVertex2d(-6,-22);
        glVertex2d(6,-22);
        glVertex2d(17,-28);
        glVertex2d(-2,-28);
        glEnd();
        glPopMatrix();

        glPushMatrix();         //left leg
        glColor3f(0.87,0.72,0.53);
        glBegin(GL_QUADS);
        glVertex2d(5,-28);
        glVertex2d(0,-28);
        glVertex2d(3,-32);
        glVertex2d(8,-32);
        glEnd();
        glPopMatrix();

        glPushMatrix();     //right leg
        glColor3f(0.87,0.72,0.53);
        glBegin(GL_QUADS);
        glVertex2d(14,-28);
        glVertex2d(9,-28);
        glVertex2d(12,-32);
        glVertex2d(17,-32);
        glEnd();
        glPopMatrix();

        glPushMatrix();     //right shoe
        glColor3f(0,0,0);
        glBegin(GL_QUADS);
        glVertex2d(17,-32);
        glVertex2d(12,-32);
        glVertex2d(15,-35);
        glVertex2d(21,-35);
        glEnd();
        glPopMatrix();

        glPushMatrix();         //left shoe
        glColor3f(0,0,0);
        glBegin(GL_QUADS);
        glVertex2d(8,-32);
        glVertex2d(3,-32);
        glVertex2d(5,-35);
        glVertex2d(12,-35);
        glEnd();
        glPopMatrix();



        glPushMatrix(); //hair
        glRotated(-20,0,1,0);
        glColor3f(0,0,0);
        circle(9,10);
        glPopMatrix();



        glPushMatrix();         //head, neck, nose ,eye, lips
        glRotated(-20,0,1,0);
        glColor3f(0.87,0.72,0.53);
        circle(7,6);            //head
        glBegin(GL_QUADS);      //neck
        glVertex2d(-6,-6);
        glVertex2d(6,-6);
        glVertex2d(4,-10);
        glVertex2d(-4,-10);
        glEnd();
        glPushMatrix();
        glColor3f(0,0,0);
        glBegin(GL_LINES);      //right eye

        glVertex2d(4,3);
        glVertex2d(1,3);

        glEnd();
        glBegin(GL_LINES);      //lips

        glVertex2d(2,-3);
        glVertex2d(-2,-3);

        glEnd();
        glPopMatrix();

        glPushMatrix();
        glColor3f(0,0,0);
        glBegin(GL_LINES);      //left eye

        glVertex2d(-4,3);
        glVertex2d(-1,3);

        glEnd();
        circle(0.5,2);      //nose
        glPopMatrix();

        glPopMatrix();
    }
   
    glPopMatrix();


}

void slide()
{

    glPushMatrix();
    //glRotatef(90,1,0,0);
    glTranslatef(2,-3,0);
    //glScalef(0.8,1,0);
    glPushMatrix();
    glTranslatef(-3,-3,0);
    glColor3f(0.54,0,0);
    glBegin(GL_QUADS);
    glVertex2d(0,0);
    glVertex2d(3,0);
    glVertex2d(2.8,-0.1);
    glVertex2d(-0.1,-0.1);
    glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(-2,-2,0);
    glColor3f(0.54,0,0);
    glBegin(GL_QUADS);
    glVertex2d(0,0);
    glVertex2d(3,0);
    glVertex2d(2.8,-0.1);
    glVertex2d(-0.1,-0.1);
    glEnd();
    glPopMatrix();

    glPushMatrix();
    glTranslatef(-1,-1,0);
    glColor3f(0.54,0,0);
    glBegin(GL_QUADS);
    glVertex2d(0,0);
    glVertex2d(3,0);
    glVertex2d(2.8,-0.1);
    glVertex2d(-0.1,-0.1);
    glEnd();
    glPopMatrix();

    glPushMatrix();
    glColor3f(0.54,0.396,0.031);
    glBegin(GL_QUADS);
    glVertex2d(0,0);
    glVertex2d(0.3,0);
    glVertex2d(-3.7,-4);
    glVertex2d(-4,-4);
    glEnd();
    glPopMatrix();

    glPushMatrix();
    glColor3f(0.54,0.396,0.031);
    glBegin(GL_QUADS);
    glVertex2d(3,0);
    glVertex2d(2.7,0);
    glVertex2d(-1.3,-4);
    glVertex2d(-1,-4);
    glEnd();
    glPopMatrix();

    glPushMatrix();
    glColor3f(0.54,0,0);
    glBegin(GL_QUADS);
    glVertex2d(0,0);
    glVertex2d(3,0); //slider
    glVertex2d(6,-5);
    glVertex2d(3,-5);
    glEnd();
    glPopMatrix();
   
    glRotatef(1,1,1,1);
    glTranslated(-3.6,3.4,0);
   

    glScalef(0.05,0.05,0);
    glPushMatrix();   //child top
    glColor3f(0,1,0);
    glBegin(GL_POLYGON);
    glVertex2d(-6,-6);
    glVertex2d(-11,-9);
    glVertex2d(-9,-13);
    glVertex2d(-6,-11);
    glVertex2d(-6,-22);
    glVertex2d(6,-22);
    glVertex2d(6,-11);
    glVertex2d(9,-13);
    glVertex2d(11,-9);
    glVertex2d(6,-6);
    glVertex2d(4,-10);
    glVertex2d(-4,-10);
    glEnd();
    glPopMatrix();

    glPushMatrix();     //left hand
    glColor3f(1,0.94,0.83);
    glBegin(GL_QUADS);
    glVertex2d(-11,-9);
    glVertex2d(-9,-13);
    glVertex2d(-13,-20);
    glVertex2d(-16,-18);
    glEnd();

    glPopMatrix();

    glPushMatrix();     //left hand palm
    glTranslated(-15,-20,0);
    glColor3f(1,0.94,0.83);
    circle(3,2.5);
    glPopMatrix();


    glPushMatrix();     //right hand
    glColor3f(1,0.94,0.83);
    glBegin(GL_QUADS);
    glVertex2d(11,-9);
    glVertex2d(9,-13);
    glVertex2d(13,-20);
    glVertex2d(16,-18);
    glEnd();
    glPopMatrix();

    glPushMatrix();         //right hand palm
    glTranslated(15,-20,0);
    glColor3f(1,0.94,0.83);
    circle(3,2.5);
    glPopMatrix();


    glPushMatrix();     //skirt
    glColor3f(1,0,0);
    glBegin(GL_QUADS);
    glVertex2d(-6,-22);
    glVertex2d(6,-22);
    glVertex2d(4,-32);
    glVertex2d(-16,-30);
    glEnd();
    glPopMatrix();

    glPushMatrix();         //left leg
    glTranslated(-6,1.5,0);
    glColor3f(1,0.94,0.83);
    glBegin(GL_QUADS);
    glVertex2d(-6,-32);
    glVertex2d(-2,-32);
    glVertex2d(-2,-38);
    glVertex2d(-6,-38);
    glEnd();
    glPopMatrix();

    glPushMatrix();     //right leg
    glTranslated(-5,0.8,0);
    glColor3f(1,0.94,0.83);
    glBegin(GL_QUADS);
    glVertex2d(6,-32);
    glVertex2d(2,-32);
    glVertex2d(2,-38);
    glVertex2d(6,-38);
    glEnd();
    glPopMatrix();

    glPushMatrix();     //right shoe
    glTranslated(-5,0.8,0);
    glColor3f(0,0,0);
    glBegin(GL_QUADS);
    glVertex2d(6,-42);
    glVertex2d(-2,-42);
    glVertex2d(2,-38);
    glVertex2d(6,-38);
    glEnd();
    glPopMatrix();

    glPushMatrix();         //left shoe
    glTranslated(-6,1.5,0);
    glColor3f(0,0,0);
    glBegin(GL_QUADS);
    glVertex2d(-10,-42);
    glVertex2d(-2,-42);
    glVertex2d(-2,-38);
    glVertex2d(-6,-38);
    glEnd();
    glPopMatrix();



    glPushMatrix(); //hair
    glColor3f(0,0,0);
    circle(9,10);
    glPopMatrix();



    glPushMatrix();         //head, neck, nose ,eye, lips
    glColor3f(1,0.94,0.83);
    circle(7,6);            //head
    glBegin(GL_QUADS);      //neck
    glVertex2d(-6,-6);
    glVertex2d(6,-6);
    glVertex2d(4,-10);
    glVertex2d(-4,-10);
    glEnd();
    glPushMatrix();
    glColor3f(0,0,0);
    glBegin(GL_LINES);      //right eye

    glVertex2d(4,3);
    glVertex2d(1,3);

    glEnd();
    glBegin(GL_LINES);      //lips

    glVertex2d(2,-3);
    glVertex2d(-2,-3);

    glEnd();
    glPopMatrix();

    glPushMatrix();
    glColor3f(0,0,0);
    glBegin(GL_LINES);      //left eye

    glVertex2d(-4,3);
    glVertex2d(-1,3);

    glEnd();
    circle(0.5,2);      //nose
    glPopMatrix();

    glPopMatrix();
    glPopMatrix();
    babySlide();

}


void glidder()
{
    glPushMatrix();
    //glRotatef(-15,1,0,0);
    glTranslated(-18.5,-6,0);
    glColor3f(1,0,0);
    glScalef(0.8,0.5,0);
    if(glUp==0)
    {
        glPushMatrix();
        glBegin(GL_QUADS);
        glVertex2f(0,0);
        glVertex2f(13,3.0);
        glVertex2f(13,3.3);
        glVertex2f(0,0.3);
        glEnd();
        glPopMatrix();

        glPushMatrix();
        glBegin(GL_QUADS);
        glVertex2d(3.0,0.9);
        glVertex2d(3.0,1.5);
        glVertex2d(3.3,1.5);
        glVertex2d(3.3,0.9);
        glEnd();
        glPopMatrix();

        glPushMatrix();
        glBegin(GL_QUADS);
        glVertex2d(10.0,2.4);
        glVertex2d(10.0,3.0);
        glVertex2d(9.7,3.0);
        glVertex2d(9.7,2.4);
        glEnd();
        glPopMatrix();
        glPushMatrix();  //glidder bottom
        glTranslated(6.2,1.0,1);
        glBegin(GL_QUADS);
        glVertex2d(0.0,0.5);
        glVertex2d(0.0,-2.0);
        glVertex2d(0.5,-2.0);
        glVertex2d(0.5,0.6);
        glEnd();
        glPopMatrix();
    }

    else if(glUp==1)
    {
        glPushMatrix();
        glBegin(GL_QUADS);
        glVertex2f(0,3.0);
        glVertex2f(0,3.3);
        glVertex2f(13,0.3);
        glVertex2f(13,0);
        glEnd();
        glPopMatrix();
        glPushMatrix();
        glBegin(GL_QUADS);
        glVertex2d(3.0,2.4);
        glVertex2d(3.0,3.0);
        glVertex2d(3.3,3.0);
        glVertex2d(3.3,2.4);
        glEnd();
        glPopMatrix();

        glPushMatrix();
        glBegin(GL_QUADS);
        glVertex2d(10.0,0.9);
        glVertex2d(10.0,1.5);
        glVertex2d(9.7,1.5);
        glVertex2d(9.7,0.9);
        glEnd();
        glPopMatrix();
        glPushMatrix();  //glidder bottom
        glTranslated(6.2,1.0,1);
        //glRotatef(glAngle,0,0,1);
        glBegin(GL_QUADS);
        glVertex2d(0.0,0.6);
        glVertex2d(0.0,-2.0);
        glVertex2d(0.5,-2.0);
        glVertex2d(0.5,0.5);
        glEnd();
        glPopMatrix();

    }




    glPopMatrix();





    glPushMatrix();
    if(isbaby==2)
    {
        if(glUp==0)
        {
            glRotatef(20,1,1,1);
            glTranslated(-17.8,-0.6,0);
        }
        else if(glUp==1)
        {
            glRotatef(-20,1,1,1);
            glTranslated(-15.8,-6.6,0);

        }

        glScaled(0.05,0.05,0);


       
        glPushMatrix();   //jama top
        glColor3f(1,0,0);
        glBegin(GL_POLYGON);
        glVertex2d(-6,-6);
        glVertex2d(-11,-9);
        glVertex2d(-9,-13);
        glVertex2d(-6,-11);
        glVertex2d(-6,-22);
        glVertex2d(6,-22);
        glVertex2d(6,-11);
        glVertex2d(9,-13);
        glVertex2d(11,-9);
        glVertex2d(6,-6);
        glVertex2d(4,-10);
        glVertex2d(-4,-10);
        glEnd();
        glPopMatrix();

        glPushMatrix();     //left hand
        glColor3f(0.87,0.72,0.53);
        glRotated(-15,0,1,0);
        glBegin(GL_QUADS);
        glVertex2d(-11,-9);
        glVertex2d(-9,-13);
        glVertex2d(-18,-11);
        glVertex2d(-16,-7);
        glEnd();

        glPopMatrix();

        glPushMatrix();     //left hand palm
        glTranslated(-18.5,-9,0);
        //glRotated(-15,0,0,1);
        glColor3f(0.87,0.72,0.53);
        circle(3.3,2.7);
        glPopMatrix();


        glPushMatrix();     //right hand
        glColor3f(0.87,0.72,0.53);
        glBegin(GL_QUADS);
        glVertex2d(11,-9);
        glVertex2d(9,-13);
        glVertex2d(13,-20);
        glVertex2d(16,-18);
        glEnd();
        glPopMatrix();

        glPushMatrix();         //right hand palm
        glTranslated(15,-20,0);
        glColor3f(0.87,0.72,0.53);
        circle(3,2.5);
        glPopMatrix();


        glPushMatrix();     //skirt
        glColor3f(0,0,1);
        glBegin(GL_QUADS);
        glVertex2d(-6,-22);
        glVertex2d(6,-22);
        glVertex2d(4,-32);
        glVertex2d(-16,-30);
        glEnd();
        glPopMatrix();

        glPushMatrix();         //left leg
        glTranslated(-6,1.5,0);
        glColor3f(0.87,0.72,0.53);
        glBegin(GL_QUADS);
        glVertex2d(-6,-32);
        glVertex2d(-2,-32);
        glVertex2d(-2,-38);
        glVertex2d(-6,-38);
        glEnd();
        glPopMatrix();

        glPushMatrix();     //right leg
        glTranslated(-5,0.8,0);
        glColor3f(0.87,0.72,0.53);
        glBegin(GL_QUADS);
        glVertex2d(6,-32);
        glVertex2d(2,-32);
        glVertex2d(2,-38);
        glVertex2d(6,-38);
        glEnd();
        glPopMatrix();

        glPushMatrix();     //right shoe
        glTranslated(-5,0.8,0);
        glColor3f(0,0,0);
        glBegin(GL_QUADS);
        glVertex2d(6,-42);
        glVertex2d(-2,-42);
        glVertex2d(2,-38);
        glVertex2d(6,-38);
        glEnd();
        glPopMatrix();

        glPushMatrix();         //left shoe
        glTranslated(-6,1.5,0);
        glColor3f(0,0,0);
        glBegin(GL_QUADS);
        glVertex2d(-10,-42);
        glVertex2d(-2,-42);
        glVertex2d(-2,-38);
        glVertex2d(-6,-38);
        glEnd();
        glPopMatrix();



        glPushMatrix(); //hair
        glColor3f(0,0,0);
        circle(9,10);
        glPopMatrix();



        glPushMatrix();         //head, neck, nose ,eye, lips
        glColor3f(0.87,0.72,0.53);
        circle(7,6);            //head
        glBegin(GL_QUADS);      //neck
        glVertex2d(-6,-6);
        glVertex2d(6,-6);
        glVertex2d(4,-10);
        glVertex2d(-4,-10);
        glEnd();
        glPushMatrix();
        glColor3f(0,0,0);
        glBegin(GL_LINES);      //right eye

        glVertex2d(4,3);
        glVertex2d(1,3);

        glEnd();
        glBegin(GL_LINES);      //lips

        glVertex2d(2,-3);
        glVertex2d(-2,-3);

        glEnd();
        glPopMatrix();

        glPushMatrix();
        glColor3f(0,0,0);
        glBegin(GL_LINES);      //left eye

        glVertex2d(-4,3);
        glVertex2d(-1,3);

        glEnd();
        circle(0.5,2);      //nose
        glPopMatrix();

        glPopMatrix();
    }

    glPopMatrix();

    glPushMatrix();



    if(glUp==0)
    {
        glRotatef(20,1,1,1);
        glTranslated(-10.6,-1.2,0);
    }
    else if(glUp==1)
    {
        //printf("Hi|");
        glRotatef(-20,1,1,1);
        glTranslated(-8.5,-6.2,0);
    }

    glScalef(0.05,0.05,0);
    //glRotated(20,1,1,0);
    glPushMatrix();   //jama top
    glColor3f(1,1,0.4);
    glBegin(GL_POLYGON);
    glVertex2d(-6,-6);
    glVertex2d(-11,-9);
    glVertex2d(-9,-13);
    glVertex2d(-6,-11);
    glVertex2d(-6,-22);
    glVertex2d(6,-22);
    glVertex2d(6,-11);
    glVertex2d(9,-13);
    glVertex2d(11,-9);
    glVertex2d(6,-6);
    glVertex2d(4,-10);
    glVertex2d(-4,-10);
    glEnd();
    glPopMatrix();

    glPushMatrix();     //left hand
    glColor3f(1,0.94,0.83);
    glBegin(GL_QUADS);
    glVertex2d(-11,-9);
    glVertex2d(-9,-13);
    glVertex2d(-13,-20);
    glVertex2d(-16,-18);
    glEnd();

    glPopMatrix();

    glPushMatrix();     //left hand palm
    glTranslated(-15,-20,0);
    glColor3f(1,0.94,0.83);
    circle(3,2.5);
    glPopMatrix();


    glPushMatrix();     //right hand
    glColor3f(1,0.94,0.83);
    glBegin(GL_QUADS);
    glVertex2d(11,-9);
    glVertex2d(9,-13);
    glVertex2d(13,-20);
    glVertex2d(16,-18);
    glEnd();
    glPopMatrix();

    glPushMatrix();         //right hand palm
    glTranslated(15,-20,0);
    glColor3f(1,0.94,0.83);
    circle(3,2.5);
    glPopMatrix();


    glPushMatrix();     //skirt
     glColor3f(0.6,0.196,0.8);
    glBegin(GL_QUADS);
    glVertex2d(-6,-22);
    glVertex2d(6,-22);
    glVertex2d(4,-32);
    glVertex2d(-16,-30);
    glEnd();
    glPopMatrix();

    glPushMatrix();         //left leg
    glTranslated(-6,1.5,0);
    glColor3f(1,0.94,0.83);
    glBegin(GL_QUADS);
    glVertex2d(-6,-32);
    glVertex2d(-2,-32);
    glVertex2d(-2,-38);
    glVertex2d(-6,-38);
    glEnd();
    glPopMatrix();

    glPushMatrix();     //right leg
    glTranslated(-5,0.8,0);
    glColor3f(1,0.94,0.83);
    glBegin(GL_QUADS);
    glVertex2d(6,-32);
    glVertex2d(2,-32);
    glVertex2d(2,-38);
    glVertex2d(6,-38);
    glEnd();
    glPopMatrix();

    glPushMatrix();     //right shoe
    glTranslated(-5,0.8,0);
    glColor3f(0,0,0);
    glBegin(GL_QUADS);
    glVertex2d(6,-42);
    glVertex2d(-2,-42);
    glVertex2d(2,-38);
    glVertex2d(6,-38);
    glEnd();
    glPopMatrix();

    glPushMatrix();         //left shoe
    glTranslated(-6,1.5,0);
    glColor3f(0,0,0);
    glBegin(GL_QUADS);
    glVertex2d(-10,-42);
    glVertex2d(-2,-42);
    glVertex2d(-2,-38);
    glVertex2d(-6,-38);
    glEnd();
    glPopMatrix();



    glPushMatrix(); //hair
    glColor3f(0,0,0);
    circle(9,10);
    glPopMatrix();



    glPushMatrix();         //head, neck, nose ,eye, lips
    glColor3f(1,0.94,0.83);
    circle(7,6);            //head
    glBegin(GL_QUADS);      //neck
    glVertex2d(-6,-6);
    glVertex2d(6,-6);
    glVertex2d(4,-10);
    glVertex2d(-4,-10);
    glEnd();
    glPushMatrix();
    glColor3f(0,0,0);
    glBegin(GL_LINES);      //right eye

    glVertex2d(4,3);
    glVertex2d(1,3);

    glEnd();
    glBegin(GL_LINES);      //lips

    glVertex2d(2,-3);
    glVertex2d(-2,-3);

    glEnd();
    glPopMatrix();

    glPushMatrix();
    glColor3f(0,0,0);
    glBegin(GL_LINES);      //left eye

    glVertex2d(-4,3);
    glVertex2d(-1,3);

    glEnd();
    circle(0.5,2);      //nose
    glPopMatrix();

    glPopMatrix();

    //glPopMatrix();
    glPopMatrix();
}


void spe_key(int key, int x, int y)
{

    //printf("BX:%f---BY:%f\n",bx,by);
    switch (key)
    {

    case GLUT_KEY_LEFT:


        if(bx==-19)
{
glutPostRedisplay();
}
        else
        {
        bx=bx-0.5;
        glutPostRedisplay();
}

break;

    case GLUT_KEY_RIGHT:


        if(bx==18.5)
{
glutPostRedisplay();
}
        else
        {
        bx=bx+0.5;
        glutPostRedisplay();
}
       
        break;

    case GLUT_KEY_DOWN:

        if(by==-5)
{
glutPostRedisplay();
}
else
{
by=by-0.5;
        glutPostRedisplay();
}
        break;

    case GLUT_KEY_UP:

       if(by==1)
{
glutPostRedisplay();
}
        else
        {
        by=by+0.5;
        glutPostRedisplay();
}
       
        break;
default:
        break;
    }

}

void windMove()
{
   

    if(angle<-726.5)
    {
        isbaby=0;
        angle=0;
        bx=7;
        by=0;
        glutIdleFunc(NULL);
    }
    else
    {
        angle=angle-0.2;
    }
    glutPostRedisplay();

}

void swingmove()
{
    if(dolnay>=0.1)
    {
        dolnay+=0.001;
    }
    else if(dolnay<=-0.1)
    {
        dolnay-=0.001;
    }

    glutPostRedisplay();

}

void slideMove()
{
    stepx+=0.007;
    stepy-=0.01;
    glutPostRedisplay();
    if(stepy<-4.5)
    {
        isbaby=0;
        step=0;
        stepx=0;
        stepy=0;
        bx=-1;
        by=-4;
        glutIdleFunc(NULL);
        glutPostRedisplay();
    }
}

void display(void)
{

    glClear(GL_COLOR_BUFFER_BIT);
glLoadIdentity();
glScalef(20,10,0);
    sky();
    hillSide();
ground();

    sun();
    cloudLeft();
    cloudRightUp();
    cloudRight();
    cloudMiddle();
    crow();
    hillTree();
    compound();

    glidder();
    if(isbaby!=8)
    {
       
        gaintWheel();
        swing();

    }
    bench();
    if(isbaby==0||isbaby==6||isbaby==8)
    {
        baby();
    }
    slide();


    if(isbaby==8)
    {
       
        gaintWheel();
        swing();

    }
glFlush();
    glutPostRedisplay();
//glutSwapBuffers();
   
}

void init(void)
{
glMatrixMode(GL_PROJECTION);

glClearColor (0.0, 0.0, 0.0, 0.0);
gluOrtho2D(-20,20,-10,10);
// glOrtho(-20.0, 20.0, -10.0, 10.0, -15.0, 15.0);
glMatrixMode(GL_MODELVIEW);
}

void normal_key(unsigned char key, int x, int y)
{
    switch (key)
    {

case 'Q':
if(flag==1)
{
init();
    glutDisplayFunc(infoDisplay);
    glutKeyboardFunc(normal_key);
    glutPostRedisplay();
    flag=0;
}
        break;

case 'Z':
if(state)
{
glLoadIdentity();
init();
   glutDisplayFunc(display);
   glutSpecialFunc(spe_key);
   glutKeyboardFunc(normal_key);
   glutPostRedisplay();
       
state=0;
}
break;

    case 'u':
        isbaby=1;
        dolnay=0.1;
        glutIdleFunc(swingmove);
        glutPostRedisplay();
       
        break;
    case 'd':
        isbaby=0;
        bx=-15;
        by=-0.5;
        glutIdleFunc(NULL);
        glutPostRedisplay();
        break;

    case 'g':
        isbaby=2;
        glutPostRedisplay();
        break;

    case 'j':
        isbaby=0;
        bx=-17;
        by=-6;
        glUp=1;
        glutPostRedisplay();
        break;

    case 'h':
        glUp=1;
        glutPostRedisplay();
        break;

    case 'l':
        glUp=0;
        glutPostRedisplay();
        break;

    case 'r':
        isbaby=3;
        glutPostRedisplay();
        break;

    case 's':
        isbaby=0;
        bx=-4;
        by=-1;
        glutPostRedisplay();
        break;

    case 'w':
        isbaby=5;
        glutIdleFunc(windMove);

        break;


    case 'o':
       
        isbaby=6;
        step++;
        if(step==1)
        {
            bx=0.5;
            by=-3.5;
        }
        else if(step==2)
        {
            bx=1.5;
            by=-2.5;
        }
        else if(step==3)
        {
            bx=2.5;
            by=-1.5;
        }

        else if(step==4)
        {
            isbaby=7;
            glutIdleFunc(slideMove);
            by=-2.5;
            bx=1.5;
        }
        glutPostRedisplay();
        break;


    case 'b':
        isbaby=8;
        glutPostRedisplay();
        break;

    default:
        break;
    }

}



int main(int argc,char** argv)
{
glutInit(&argc,argv);


    glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB | GLUT_DEPTH);
    glutInitWindowSize (1600, 1000);
    glutInitWindowPosition (0, 0);
    glutCreateWindow ("Children Park");
introinit();
// init();
// glutDisplayFunc(display);
    glutDisplayFunc(introDisplay);
   
    glutKeyboardFunc(normal_key);
    glutMainLoop();
    return 0;  
}
